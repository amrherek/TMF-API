<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<groupId>com.orange.apistandard</groupId>
	<artifactId>orange-standardapi-root</artifactId>
	<version>1.2</version>
	<packaging>pom</packaging>

	<name>[Standard API] Root for all projects</name>

	<parent>
		<groupId>com.francetelecom.maven</groupId>
		<artifactId>pom-corporate</artifactId>
		<version>3.0</version>
	</parent>

	<scm>
		<connection>scm:git:gitolite@www.forge.orange-labs.fr/soastream6/orange-standardapi-root.git</connection>
		<developerConnection>scm:git:gitolite@www.forge.orange-labs.fr/soastream6/orange-standardapi-root.git</developerConnection>
		<tag>orange-standardapi-root-1.2</tag>
	</scm>

	<properties>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<maven.compiler.source>1.7</maven.compiler.source>
		<maven.compiler.target>1.7</maven.compiler.target>

		<spring.version>4.1.1.RELEASE</spring.version>
		<springdata.version>1.6.1.RELEASE</springdata.version>
		<springdatacommons.version>1.8.1.RELEASE</springdatacommons.version>
		<springsecurity.version>3.2.4.RELEASE</springsecurity.version>

		<hibernate.jpa.version>4.3.5.Final</hibernate.jpa.version>
		<ehcache.version>2.8.1</ehcache.version>
		<h2.version>1.3.172</h2.version>

		<jersey.version>2.17</jersey.version>

		<slf4j.version>1.7.7</slf4j.version>
		<logback.version>1.1.2</logback.version>
		<junit.version>4.11</junit.version>
		<mockito.version>1.9.5</mockito.version>
		<cargo.version>1.4.8</cargo.version>

		<orika.version>1.4.5</orika.version>

	</properties>

	<dependencyManagement>
		<dependencies>

			<!-- ******************* -->
			<!-- Spring dependencies -->
			<!-- ******************* -->
			<!-- Use bom to add all needed Spring dependencies -->
			<dependency>
				<groupId>org.springframework</groupId>
				<artifactId>spring-framework-bom</artifactId>
				<version>${spring.version}</version>
				<scope>import</scope>
				<type>pom</type>
			</dependency>

			<!-- but exclude commons-logging as we're using jcl-over-slf4j -->
			<dependency>
				<groupId>org.springframework</groupId>
				<artifactId>spring-core</artifactId>
				<version>${spring.version}</version>
				<exclusions>
					<exclusion>
						<groupId>commons-logging</groupId>
						<artifactId>commons-logging</artifactId>
					</exclusion>
				</exclusions>
			</dependency>

			<dependency>
				<groupId>org.springframework.data</groupId>
				<artifactId>spring-data-jpa</artifactId>
				<version>${springdata.version}</version>
			</dependency>
			
			<dependency>
				<groupId>org.springframework.data</groupId>
				<artifactId>spring-data-commons</artifactId>
				<version>${springdatacommons.version}</version>
			</dependency>

			<!-- *********************** -->
			<!-- Spring Security library -->
			<!-- *********************** -->
			<dependency>
				<groupId>org.springframework.security</groupId>
				<artifactId>spring-security-core</artifactId>
				<version>${springsecurity.version}</version>
			</dependency>
			<dependency>
				<groupId>org.springframework.security</groupId>
				<artifactId>spring-security-web</artifactId>
				<version>${springsecurity.version}</version>
			</dependency>
			<dependency>
				<groupId>org.springframework.security</groupId>
				<artifactId>spring-security-config</artifactId>
				<version>${springsecurity.version}</version>
			</dependency>
			<dependency>
				<groupId>org.springframework.security</groupId>
				<artifactId>spring-security-taglibs</artifactId>
				<version>${springsecurity.version}</version>
			</dependency>

			<!-- cglib is needed with spring because cxf is proxying classes -->
			<dependency>
				<groupId>cglib</groupId>
				<artifactId>cglib-nodep</artifactId>
				<version>2.1_3</version>
			</dependency>


			<!-- ******************* -->
			<!-- Jersey Dependencies -->
			<!-- ******************* -->
			<dependency>
				<groupId>org.glassfish.jersey.core</groupId>
				<artifactId>jersey-server</artifactId>
				<version>${jersey.version}</version>
			</dependency>

			<dependency>
				<groupId>org.glassfish.jersey.media</groupId>
				<artifactId>jersey-media-moxy</artifactId>
				<version>${jersey.version}</version>
			</dependency>

			<dependency>
				<groupId>org.eclipse.persistence</groupId>
				<artifactId>org.eclipse.persistence.moxy</artifactId>
				<version>2.5.1</version>
			</dependency>

			<dependency>
				<groupId>org.glassfish.jersey.media</groupId>
				<artifactId>jersey-media-json-jackson</artifactId>
				<version>${jersey.version}</version>
			</dependency>

			<dependency>
				<groupId>org.glassfish.jersey.core</groupId>
				<artifactId>jersey-client</artifactId>
				<version>${jersey.version}</version>
			</dependency>

			<!-- <dependency> -->
			<!-- <groupId>org.glassfish.jersey.contribs</groupId> -->
			<!-- <artifactId>jersey-apache-client</artifactId> -->
			<!-- <version>${jersey.version}</version> -->
			<!-- </dependency> -->

			<!-- <dependency> -->
			<!-- <groupId>org.glassfish.jersey.core</groupId> -->
			<!-- <artifactId>jersey-grizzly2</artifactId> -->
			<!-- <version>${jersey.version}</version> -->
			<!-- </dependency> -->

			<dependency>
				<groupId>org.glassfish.jersey.ext</groupId>
				<artifactId>jersey-spring3</artifactId>
				<version>${jersey.version}</version>
			</dependency>

			<dependency>
				<groupId>org.glassfish.jersey.ext</groupId>
				<artifactId>jersey-entity-filtering</artifactId>
				<version>${jersey.version}</version>
			</dependency>

			<dependency>
				<groupId>org.glassfish.jersey.ext</groupId>
				<artifactId>jersey-declarative-linking</artifactId>
				<version>${jersey.version}</version>
			</dependency>

			<dependency>
				<groupId>org.glassfish.jersey.test-framework.providers</groupId>
				<artifactId>jersey-test-framework-provider-jetty</artifactId>
				<version>${jersey.version}</version>
			</dependency>

			<dependency>
				<groupId>com.wordnik</groupId>
				<artifactId>swagger-jersey2-jaxrs_2.10</artifactId>
				<version>1.3.4</version>
			</dependency>


			<!-- ************************ -->
			<!-- Hibernate JPA dependency -->
			<!-- ************************ -->
			<dependency>
				<groupId>org.hibernate</groupId>
				<artifactId>hibernate-entitymanager</artifactId>
				<version>${hibernate.jpa.version}</version>
			</dependency>

			<dependency>
				<groupId>org.hibernate</groupId>
				<artifactId>hibernate-core</artifactId>
				<version>${hibernate.jpa.version}</version>
			</dependency>

			<!-- JPA 2.0 specification -->
			<dependency>
				<groupId>org.hibernate.javax.persistence</groupId>
				<artifactId>hibernate-jpa-2.1-api</artifactId>
				<version>1.0.0.Final</version>
			</dependency>

			<dependency>
				<groupId>net.sf.ehcache</groupId>
				<artifactId>ehcache</artifactId>
				<version>${ehcache.version}</version>
			</dependency>

			<dependency>
				<groupId>org.hibernate</groupId>
				<artifactId>hibernate-ehcache</artifactId>
				<version>${hibernate.jpa.version}</version>
				<exclusions>
					<exclusion>
						<groupId>net.sf.ehcache</groupId>
						<artifactId>ehcache-core</artifactId>
					</exclusion>
				</exclusions>
			</dependency>

			<dependency>
				<groupId>javax.validation</groupId>
				<artifactId>validation-api</artifactId>
				<version>1.0.0.GA</version>
			</dependency>

			<!-- this library is scoped as provided to exclude it from war because 
				it is already available in JRE 1.6 rt.jar file and avoid jonas error "Could 
				not obtain JOTM transaction manager instance" -->
			<dependency>
				<groupId>javax.transaction</groupId>
				<artifactId>jta</artifactId>
				<version>1.1</version>
				<scope>provided</scope>
			</dependency>

			<dependency>
				<groupId>javax.xml.stream</groupId>
				<artifactId>stax-api</artifactId>
				<version>1.0-2</version>
				<scope>provided</scope>
			</dependency>

			<dependency>
				<groupId>commons-beanutils</groupId>
				<artifactId>commons-beanutils</artifactId>
				<version>1.8.3</version>
			</dependency>


			<!-- Example of jdbc driver to use for real projects -->
			<!-- <dependency> <groupId>com.oracle</groupId> <artifactId>ojdbc14</artifactId> 
				<version>10.2.0.2.0</version> <scope>test</scope> </dependency> -->
			<!-- <dependency> <groupId>mysql</groupId> <artifactId>mysql-connector-java</artifactId> 
				<version>5.0.7</version> <scope>test</scope> </dependency> -->
			<!-- <dependency> <groupId>org.postgresql</groupId> <artifactId>postgresql</artifactId> 
				<version>${postgresql.version}</version> <scope>test</scope> </dependency> -->
			<!-- hsqldb driver used for unit tests -->
			<!-- migrated to H2 database -->
			<!-- <dependency> <groupId>org.hsqldb</groupId> <artifactId>hsqldb</artifactId> 
				<version>2.2.9</version> <scope>test</scope> </dependency> -->
			<dependency>
				<groupId>com.h2database</groupId>
				<artifactId>h2</artifactId>
				<version>${h2.version}</version>
				<scope>runtime</scope>
			</dependency>


			<!-- orika is a replacement of dozer dependencies -->
			<dependency>
				<groupId>ma.glasnost.orika</groupId>
				<artifactId>orika-core</artifactId>
				<version>${orika.version}</version>
			</dependency>

			<dependency>
				<groupId>ch.qos.logback</groupId>
				<artifactId>logback-classic</artifactId>
				<version>${logback.version}</version>
			</dependency>
			<dependency>
				<groupId>org.slf4j</groupId>
				<artifactId>jcl-over-slf4j</artifactId>
				<version>${slf4j.version}</version>
			</dependency>
			<dependency>
				<groupId>org.slf4j</groupId>
				<artifactId>log4j-over-slf4j</artifactId>
				<version>${slf4j.version}</version>
			</dependency>

		</dependencies>
	</dependencyManagement>

	<reporting>
		<plugins>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-changes-plugin</artifactId>
				<version>2.11</version>
				<reportSets>
					<reportSet>
						<reports>
							<report>changes-report</report>
						</reports>
					</reportSet>
				</reportSets>
			</plugin>
		</plugins>
	</reporting>

	<build>
		<plugins>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-release-plugin</artifactId>
				<version>2.5.3</version>
				<configuration>
					<pushChanges>false</pushChanges>
					<localCheckout>true</localCheckout>
				</configuration>
			</plugin>

			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-site-plugin</artifactId>
				<version>3.4</version>

				<dependencies>
					<dependency>
						<!-- add support for ssh/scp -->
						<groupId>org.apache.maven.wagon</groupId>
						<artifactId>wagon-ssh</artifactId>
						<version>1.0</version>
					</dependency>
					<dependency>
						<groupId>lt.velykis.maven.skins</groupId>
						<artifactId>reflow-velocity-tools</artifactId>
						<version>1.1.1</version>
					</dependency>
					<!-- Reflow skin requires Velocity >= 1.7 -->
					<dependency>
						<groupId>org.apache.velocity</groupId>
						<artifactId>velocity</artifactId>
						<version>1.7</version>
					</dependency>
					<dependency>
						<groupId>org.apache.maven.doxia</groupId>
						<artifactId>doxia-module-markdown</artifactId>
						<version>1.6</version>
					</dependency>

				</dependencies>
			</plugin>

		</plugins>
	</build>

</project>